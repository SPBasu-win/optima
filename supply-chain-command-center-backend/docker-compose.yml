version: '3.8'

services:
  # Supply Chain API
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - DATABASE_NAME=supply_chain_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - supply-chain-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=supply_chain_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - supply-chain-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - supply-chain-network

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - supply-chain-network

  # Nginx Load Balancer (for production scaling)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - supply-chain-network
    profiles:
      - production

  # Celery Worker (for background tasks)
  celery-worker:
    build: .
    command: celery -A app.core.celery worker --loglevel=info
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - DATABASE_NAME=supply_chain_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - supply-chain-network
    profiles:
      - worker

  # Celery Flower (monitoring)
  celery-flower:
    build: .
    command: celery -A app.core.celery flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - supply-chain-network
    profiles:
      - worker

volumes:
  mongodb_data:
  redis_data:

networks:
  supply-chain-network:
    driver: bridge
